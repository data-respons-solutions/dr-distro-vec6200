pipeline {
	parameters {
		string name: 'SSTATE', defaultValue: '${OE_SSTATE_DIR}', description: 'SSTATE directory'
		string name: 'DOWNLOADS', defaultValue: '${OE_DL_DIR}', description: 'Downloads directory'
	}
	
	environment {
		MACHINE = "vec6200"
		FACTORY_MACHINE = "${MACHINE}-factory"
		GTAG = "${sh (returnStdout: true, script: 'git describe --always --tags --long --dirty').trim()}"
		DATARESPONS_IMAGE_ARTIFACTS = "workdir/tmp-glibc/deploy/images/${MACHINE}/datarespons-image-${MACHINE}-*rootfs.tar.bz2"
		FACTORY_IMAGE_ARTIFACTS = "workdir/tmp-glibc/deploy/images/${FACTORY_MACHINE}/factory-image-${FACTORY_MACHINE}-*rootfs.tar.bz2"
		BUILD_USER = "${sh (returnStdout: true, script: 'id -un').trim()}"
		BUILD_UID = "${sh (returnStdout: true, script: 'id -u').trim()}"
		BUILD_GID = "${sh (returnStdout: true, script: 'id -g').trim()}"
	}
	
	agent {
		dockerfile {
			filename 'oe-build.docker'
			dir 'build/build-tools'
			args "-v ${SSTATE}:${SSTATE} -v ${DOWNLOADS}:${DOWNLOADS}"
			additionalBuildArgs "--build-arg USERNAME=\"${BUILD_USER}\" --build-arg UID=\"${BUILD_UID}\" --build-arg GID=\"${BUILD_GID}\""
		}
	}

	stages {
	
	stage('Build') {
		steps {
			sh """
				rm -rf workdir
				TEMPLATECONF="../build/conf" source ./oe-core/oe-init-build-env workdir
				sed -i 's|.*DL_DIR ?=.*|DL_DIR ?= "${DOWNLOADS}"|' conf/local.conf
				sed -i 's|.*SSTATE_DIR ?=.*|SSTATE_DIR ?= "${SSTATE}"|' conf/local.conf
				sed -i 's|.*ACCEPT_FSL_EULA.*|ACCEPT_FSL_EULA = "1"|' conf/local.conf
				export DR_CM_COMMIT="${GTAG}"
				export DR_BUILD_NO="${BUILD_NUMBER}"
				export DR_BUILD_PLAN="${JOB_NAME}"
				export BB_ENV_EXTRAWHITE="DR_BUILD_PLAN DR_BUILD_NO DR_CM_COMMIT"
				bitbake datarespons-image
				MACHINE=${FACTORY_MACHINE} bitbake factory-image
			"""
		}
	}
	
	}
}
